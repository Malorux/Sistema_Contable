<Window x:Class="Sistema_Contable.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sistema_Contable"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        
        xmlns:viewmodels91="clr-namespace:Sistema_Contable.ViewModels"
        
        
        mc:Ignorable="d"
        FontSize="15"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        Background="#01000000"
        Foreground="#292934"
        Title="MainWindow"
        Height="650" 
        Width="1024"
        WindowState="Normal"  
        >
    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Assets/icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Storyboard x:Key="Open">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridAnimated1" >
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonOpen">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonClose">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Close">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridAnimated1" >
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="60"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonClose">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonOpen">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CloseFast">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridAnimated1" >
                    <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonClose">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ButtonOpen">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            
            <Style TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="Transparent" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                          
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Estilo para el ToggleButton-->
            <Style x:Key="SubMenuButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding BorderThickness}" >
                                <Border.ToolTip>
                                    <TextBlock Text="{Binding MenuName}" FontSize="15" Foreground="Black" Background="Transparent"/>
                                </Border.ToolTip>

                                <!--Agregar ícono y texto en nuestro botón-->
                                <Grid Margin="5,0,0,0" >

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="18"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0"  CornerRadius="1" Width="3" HorizontalAlignment="Left" Height="25" >
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="Blue"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>

                                    <Path Stretch="Uniform" Data="{Binding IconData}" Grid.Column="1" >
                                        <Path.Style>
                                            <Style TargetType="{x:Type Path}">
                                                <Setter Property="Fill" Value="#5E82F5"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                        <Setter Property="Fill" Value="#292934"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>

                                    </Path>

                                    <TextBlock Margin="15,0,2,0" FontSize="16"  VerticalAlignment="Center" Text="{Binding MenuName}" Grid.Column="2" >
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="#292934"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Foreground" Value="#5E82F5"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>

                                    </TextBlock>

                                </Grid>
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <!--Estilo para el ListBoxItem-->
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Height" Value="50"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <!--<Border Background="{TemplateBinding Background}">-->
                            <Border Background="{TemplateBinding Background}">
                                <RadioButton x:Name="SMenuButton" GroupName="SubMenu" Style="{StaticResource SubMenuButtonStyle}"
                                    Content="{Binding MenuName, FallbackValue=MenuName, TargetNullValue=MenuName}"
                                    Command="{Binding M_Command}"
                                />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--Para seleccionar ListboxItem cuando nuestro botón está en estado marcado-->
                                <DataTrigger Binding="{Binding IsChecked, ElementName=SMenuButton}" Value="True">
                                    <Setter Property="IsSelected" Value="True"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SearchBox" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="Silver"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="IBeam"/>
                <Setter Property="Padding" Value="0,0,10,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border>
                                <Grid>
                                    <TextBlock 
                                        Text="Search Something..."
                                        Cursor="IBeam"
                                        TextAlignment="Left"
                                        Margin="0,0,10,0"
                                        VerticalAlignment="Center"
                                        Foreground="LightGray">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <ContentPresenter 
                                        Content="{TemplateBinding Text}" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="17"/>
                <Setter Property="Width" Value="17"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="Opacity" Value=".5"/>
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Style.Resources>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonClose">
            <BeginStoryboard Storyboard="{StaticResource Close}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpen">
            <BeginStoryboard Storyboard="{StaticResource Open}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Your choice if you want blur effect or not..-->

        <Grid x:Name="GridAnimated1" Width="200" Grid.Column="0" Background="#f3f3f3" >
          
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Grid Grid.Row="0">
                <Button x:Name="ButtonClose" Width="50" HorizontalAlignment="Center" Height="50" VerticalAlignment="Bottom" Margin="0,0,2,0" BorderBrush="Transparent" Background="Transparent">
                    <materialDesign:PackIcon  Kind="Close" Width="25" Height="25"/>
                </Button>
                <Button x:Name="ButtonOpen" Height="50" Width="50" VerticalAlignment="Bottom"  HorizontalAlignment="Center" Visibility="Hidden" BorderBrush="Transparent" Background="Transparent" Margin="8 0 0 0">
                    <materialDesign:PackIcon  Kind="Menu" Width="25" Height="25"/>
                </Button>
            </Grid>
        
            <StackPanel Grid.Row="1" Background="Transparent">
               
                <!--Menu Buttons-->
                <ListBox 
                SelectionMode="Single" 
                Margin="0 5 0 0" 
                SelectedIndex="-1" 
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding MenuItems}"
                BorderThickness="0"
                Background="Transparent"
                Foreground="#292934"
                >
                    <ListBox.DataContext>
                        <viewmodels91:MenuViewModels/>
                    </ListBox.DataContext>

                </ListBox>


            </StackPanel>
        </Grid>

        <!--MiddlePage-->
        <Grid x:Name="GridAnimated2" Grid.Column="1" Background="#f3f3f3" >

            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid  Grid.Row="0" Background="#f3f3f3">

                <!--Region User Name-->
                <!--<Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="165*"/>
                        <ColumnDefinition Width="41*"/>
                    </Grid.ColumnDefinitions>
                    <Border CornerRadius="15" BorderThickness="3" BorderBrush="LightGray" Height="30" Background="White" Margin="580,5,87,5" Grid.ColumnSpan="2" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="52"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="25,0,0,0">
                                <TextBlock Text="Michaell Joel" TextAlignment="Center" VerticalAlignment="Center" FontSize="15" Foreground="Gray" Margin="-8,1,-8,-3" Height="26" />
                            </Grid>
                            <Grid Grid.Column="1">
                                <Border CornerRadius="30" BorderThickness="1" BorderBrush="CadetBlue" Background="CadetBlue" Margin="16,1,14,1">
                                    <TextBlock TextAlignment="Center" Text="M" VerticalAlignment="Center" FontSize="15" Foreground="White" FontWeight="Bold"/>
                                </Border>

                            </Grid>
                        </Grid>
                    </Border>
                </Grid>-->


                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource WindowButtonStyle}" Background="Yellow" Margin="0 0 5 0" Click="Button_Click"/>
                    <Button Style="{StaticResource WindowButtonStyle}" Background="Green" Margin="0 0 5 0" Click="Button_Click_1"/>
                    <Button Style="{StaticResource WindowButtonStyle}" Background="Red" Margin="0 0 12 0" Click="Button_Click_2" />
                </StackPanel>
            </Grid>

            <!--marco para que las páginas naveguen cuando se selecciona un menú-->
            <Border Grid.Row="1" CornerRadius="10 0 0 0" Background="#f9f9f9" BorderBrush="Gray" BorderThickness="0.5" >
                <Frame x:Name="MainWindowFrame"  Grid.Column="1" NavigationUIVisibility="Hidden" Background="Transparent" Margin="5 15 0 5 ">

                </Frame>

            </Border>

        </Grid>

    </Grid>
</Window>
